{
	"id": "637a1895-9aff-af27-71cf-99efe1380937",
	"name": "RabbitMQ Management",
	"description": "Based on this documentation:\n\nhttps://raw.githack.com/rabbitmq/rabbitmq-management/rabbitmq_v3_6_1/priv/www/api/index.html",
	"order": [
		"cbfc36b2-bbcc-1d86-b00c-6fb016dc53ab",
		"5bc259e2-35f6-e3a0-899d-22118bf39dc9",
		"b9120d6e-e029-88f0-7ff9-070e2270b6de",
		"baffa18b-cd90-691f-7aa8-c4527a96ac0d",
		"4bfc266e-0694-8afd-fa21-633396bae404",
		"aa4b1b38-3f4e-009c-16db-11e5864b558f",
		"bdd7dffc-fa82-3312-4507-18415c1d5df4",
		"f4aeb20d-7e14-9b2a-8524-5291edbd9a51",
		"4b92e764-99c2-59cd-7ffe-8642c52989c0",
		"f3a2ff0e-8f0b-8145-8832-66a8ce7136cc",
		"d6c4bc6f-c0c3-bf38-e313-a72a90e4e7f5",
		"8a6279a1-2c09-c354-7b03-9fcfaa0080c5",
		"7945ddcb-9096-8a46-bea9-8e3f7bea4a7c",
		"b58ba47b-d267-6850-890b-1bd69c714636",
		"94421399-701e-724d-0f85-1fca237af4c6",
		"8d686177-406d-3add-3c4b-da6bf8957e18",
		"0b74d50d-e8c1-b1ef-65ed-679374cbadb8",
		"6ea1650a-27f2-c363-c65a-579a96bdce86",
		"1e4ffb57-cc22-8a21-8f89-374375109c14",
		"66aff78e-40df-8c51-aeab-47b07a770b3f",
		"d56ea2f4-0b8b-0a25-a04a-5e96748d8b00",
		"f837b335-e56f-d831-215f-a915c89dcffa",
		"c0e51bda-b3eb-f8a3-70bb-adf3a9d70838",
		"d90eb8d8-1887-9ad7-b6c1-e0557a64e0aa",
		"fd2d0177-5f2d-ffc2-d9ef-dc4119de1393",
		"f64b78ec-638a-59c2-7327-40aaff233f3d",
		"164df907-f45b-fccf-3227-b04a84012620",
		"59f0f150-7782-ff71-c3d8-d1126b98b339",
		"38fe8c03-2561-f365-2f4a-dbefb3b948c9",
		"5cb1f0bc-ecb1-01df-0022-7e57f36bdcbc",
		"a58a3319-3511-162f-9999-1641a8fd3cda",
		"2da662e2-1e78-45fb-4dd7-ea0c9cf61617",
		"ddd0df84-e554-8864-f46f-673766e19fe1",
		"3f7cbdf6-89fd-b5c6-df73-59071149a4aa",
		"e43abf77-4ab4-17a0-241b-3db5861ee5de",
		"e6c79191-5cf9-bf6e-e941-da2f4e59990d",
		"7be1b6fc-24c6-3767-5992-17f9c7a70328",
		"5a59e8ba-bd95-966c-7e90-b0d9bba68d2d",
		"22ba0ae9-6fab-b54c-5097-ce5eff5d498a",
		"258fb250-0bec-c6db-e02f-134b29e7822c",
		"09b1cb41-b902-6df4-e9be-277ad2ba2464",
		"077bed7f-abd7-21b8-4df2-44def2710580",
		"c97a970c-7dc8-b3e2-b420-8b384ad0a2df",
		"9a613d98-a364-f853-69cf-1543bab4d731",
		"d6f249b5-edb6-c549-47f1-74397a485e20",
		"ed7cd859-2d94-544b-5df6-5ae43a3a85f2",
		"1275388b-e7a0-30b7-8f8d-6d34f16d7745",
		"4d1c878a-28ec-7116-a9ed-1f5775b8f0e6",
		"ed340fa3-827e-ada8-f216-193a03eadd81",
		"e9923fcc-aeb3-6612-c099-570ac2766aa6",
		"666ad81a-c4f4-02b0-7501-a1fd4c1d57d4",
		"3241da1d-65e4-24c7-9c58-67ee95ab687b",
		"c9ff43e6-9394-1446-ff76-2be89658cd16",
		"cb2a7558-8219-dd06-692c-241b39bb7d7f",
		"07e11091-2419-aee8-fc07-4520277ad175",
		"5df65219-029c-e66c-53ed-ab9f7dcd227f",
		"06009945-18ec-992e-a708-686279a6c942",
		"8790c3b0-daeb-28d0-c263-3e2d9ad0b9b2",
		"66ee50c4-1157-739a-c75a-ed474c8cdbd4",
		"b94e7df0-c74d-4aee-d114-f199bf43f73d",
		"ec996fa5-0662-9737-5a36-2d9730e538f5",
		"510384b8-7627-7c13-7110-dc99560bab65",
		"f8acf8c4-7d6b-0cca-d47f-c680d0a305d8",
		"9f9c72bf-70c4-02fb-2349-7a997f0e7f5a",
		"6636a023-a2bf-9420-a0ea-9ae81ff0a3bd",
		"86406311-01d4-cabd-8089-c56e6969f76e",
		"597bed00-d1d5-1cb5-0a49-83adedf8e32e",
		"54ca5ea2-d026-a8c6-07ee-b380a6658ec8",
		"6357403e-212a-30ef-ed08-0bb9a314cdd1",
		"c07bfe0d-cc8a-41f9-3011-d110e219dbd9",
		"29fdb290-9fd6-8314-dc28-32d6e6eaf9ba",
		"5aba9db4-344d-2ce2-6c4d-7dd8209bd8d4",
		"3d9079d8-648d-be84-8acb-366d9c9b1065",
		"e2e1f3f2-01fd-4bd3-d004-1cf89bca6f2d"
	],
	"folders": [],
	"timestamp": 1457222676727,
	"owner": 0,
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "06009945-18ec-992e-a708-686279a6c942",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306896732,
			"name": "Delete user by name",
			"description": "Delete user by name",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "077bed7f-abd7-21b8-4df2-44def2710580",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306764050,
			"name": "Get individual exchange/queue binding",
			"description": "An individual binding between an exchange and a queue. The props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "07e11091-2419-aee8-fc07-4520277ad175",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317755071,
			"name": "Get user by name",
			"description": "Get an individual user.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "09b1cb41-b902-6df4-e9be-277ad2ba2464",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457310060364,
			"name": "Create Exchange/Queue Binding",
			"description": "Create a new binding, POST to this URI. You will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"routing_key\":\"my_routing_key\",<br>\n\"arguments\":{}<br>\n}\n</blockquote>\n\nAll keys are optional. The response will contain a Location header telling you the URI of your new binding.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n\"routing_key\":\"my_routing_key\",\n\"arguments\":{}\n}"
		},
		{
			"id": "0b74d50d-e8c1-b1ef-65ed-679374cbadb8",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts/%2f/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300861690,
			"name": "List All Open Channels on vhost",
			"description": "A list of all open channels in a specific vhost.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "1275388b-e7a0-30b7-8f8d-6d34f16d7745",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306800105,
			"name": "/api/bindings/vhost/e/source/e/destination/props",
			"description": "A list of all bindings between two exchanges. Similar to the list of all bindings between an exchange and a queue, above.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "164df907-f45b-fccf-3227-b04a84012620",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/bindings/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457302043768,
			"name": "List All Bindings in exchange is destination",
			"description": "A list of all bindings in which a given exchange is the source.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "1e4ffb57-cc22-8a21-8f89-374375109c14",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/consumers",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301159918,
			"name": "Consumer Info",
			"description": "A list of all consumers.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "22ba0ae9-6fab-b54c-5097-ce5eff5d498a",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457310063160,
			"name": "List of all vhost bindings",
			"description": "A list of all bindings in a given virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "258fb250-0bec-c6db-e02f-134b29e7822c",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306734795,
			"name": "List Exchange/Queue Binding",
			"description": "A list of all bindings between an exchange and a queue. Remember, an exchange and a queue can be bound together many times!",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "29fdb290-9fd6-8314-dc28-32d6e6eaf9ba",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307205208,
			"name": "Get individual Policy",
			"description": "Get an individual policy.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "2da662e2-1e78-45fb-4dd7-ea0c9cf61617",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457303351636,
			"name": "Create a Queue",
			"description": "To create a queue, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"auto_delete\":false,<br>\n\"durable\":true,<br>\n\"arguments\":{},<br>\n\"node\":\"rabbit@smacmullen\"<br>\n}\n</blockquote>\n\nAll keys are optional.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n\"auto_delete\":false,\n\"durable\":true,\n\"arguments\":{},\n\"node\":\"rabbit@localhost\"\n}"
		},
		{
			"id": "3241da1d-65e4-24c7-9c58-67ee95ab687b",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts/%2f/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317386453,
			"name": "Get List of vhost permissions",
			"description": "A list of all permissions for a given virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "38fe8c03-2561-f365-2f4a-dbefb3b948c9",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457303019431,
			"name": "Get List of All Queues",
			"description": "A list of all queues.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "3d9079d8-648d-be84-8acb-366d9c9b1065",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307227893,
			"name": "Delete a policy",
			"description": "Delete a policy",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "3f7cbdf6-89fd-b5c6-df73-59071149a4aa",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues/%2f/hello/bindings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457304374015,
			"name": "List all queue bindings",
			"description": "A list of all bindings on a given queue.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "4b92e764-99c2-59cd-7ffe-8642c52989c0",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/definitions/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300534330,
			"name": "Get vhost Definition",
			"description": "The server definitions for a given virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "4bfc266e-0694-8afd-fa21-633396bae404",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/nodes/rabbit@da3be74c053640fe92c6a39e2d7a5e46?memory=true&binary=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299833212,
			"name": "Get Individual Node",
			"description": "An individual node in the RabbitMQ cluster. \n\nOptional Query Params</br>\n<strong>?memory=true</strong><br>\nto get memory statistics\n\n<strong>?binary=true</strong><br>\nto get a breakdown of binary memory use (may be expensive if there are many small binaries in the system).",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "4d1c878a-28ec-7116-a9ed-1f5775b8f0e6",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306824117,
			"name": "Get List of vhost",
			"description": "A list of all vhosts.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "510384b8-7627-7c13-7110-dc99560bab65",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/permissions/vhost/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307121558,
			"name": "Delete user on vhost",
			"description": "Delete user on vhost",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "54ca5ea2-d026-a8c6-07ee-b380a6658ec8",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307186622,
			"name": "Delete Parameter on vhost",
			"description": "Delete Parameter on vhost",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "597bed00-d1d5-1cb5-0a49-83adedf8e32e",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457318332807,
			"name": "Create parameter on vhost",
			"description": "Create an individual parameter. To create a parameter, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"vhost\": \"/\",<br>\n\"component\":\"federation\",<br>\n\"name\":\"local_username\",<br>\n\"value\":\"guest\"<br>\n}\n</blockquote>",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": " {\n\"vhost\": \"/\",\n\"component\":\"federation\",\n\"name\":\"local_username\",\n\"value\":\"guest\"\n}"
		},
		{
			"id": "59f0f150-7782-ff71-c3d8-d1126b98b339",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/publish",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457302980737,
			"name": "Publish Message to Exchange",
			"description": "Publish a message to a given exchange. You will need a body looking something like:\n\n<blockquote>\n{<br>\n\"properties\":{},<br>\n\"routing_key\":\"my key\",<br>\n\"payload\":\"my body\",<br>\n\"payload_encoding\":\"string\"<br>\n}\n</blockquote>\n\nAll keys are mandatory. The payload_encoding key should be either \"string\" (in which case the payload will be taken to be the UTF-8 encoding of the payload field) or \"base64\" (in which case the payload field is taken to be base64 encoded).\nIf the message is published successfully, the response will look like:\n\n<blockquote>\n{\"routed\": true}\n</blockquote>\n\nrouted will be true if the message was sent to at least one queue.\nPlease note that the HTTP API is not ideal for high performance publishing; the need to create a new TCP connection for each message published can limit message throughput compared to AMQP or other protocols using long-lived connections.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": " {\n\"properties\":{},\n\"routing_key\":\"my key\",\n\"payload\":\"my body\",\n\"payload_encoding\":\"string\"\n}"
		},
		{
			"id": "5a59e8ba-bd95-966c-7e90-b0d9bba68d2d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457309261143,
			"name": "List of all bindings",
			"description": "A list of all bindings.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "5aba9db4-344d-2ce2-6c4d-7dd8209bd8d4",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/policies/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457318606113,
			"name": "Create a policy",
			"description": "To create a policy, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"pattern\":\"^amq.\",<br>\n\"definition\": {<br>\n     \"federation-upstream-set\":\"all\"<br>\n}, <br>\n\"priority\":0, <br>\n\"apply-to\": \"all\"<br>\n}\n<blockquote>\npattern and definition are mandatory, priority and apply-to are optional.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": " {\n\"pattern\":\"^amq.\",\n\"definition\": {\n\"federation-upstream-set\":\"all\"\n}, \n\"priority\":0, \n\"apply-to\": \"all\"\n}"
		},
		{
			"id": "5bc259e2-35f6-e3a0-899d-22118bf39dc9",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/cluster-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299160944,
			"name": "Get Cluster Name",
			"description": "Name identifying this RabbitMQ cluster.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "5cb1f0bc-ecb1-01df-0022-7e57f36bdcbc",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457303077989,
			"name": "Get vhost Queues",
			"description": "A list of all queues in a given virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "5df65219-029c-e66c-53ed-ab9f7dcd227f",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/users/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317701572,
			"name": "Create a user",
			"description": "To create a user, you will need a body looking something like this:\n\n<blockquote>\n{\"password\":\"secret\",\"tags\":\"administrator\"}\n</blockquote>\nor:\n<blockquote>\n{<br>\n\"password_hash\":\"2lmoth8l4H0DViLaK9Fxi6l9ds8=\",<br>\n\"tags\":\"administrator\"<br>\n}\n\nThe tags key is mandatory. Either <strong>password</strong> or <strong>password_hash</strong> must be set. Setting password_hash to \"\" will ensure the user cannot use a password to log in. tags is a comma-separated list of tags for the user. Currently recognised tags are \"administrator\", \"monitoring\" and \"management\".",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n\"password\":\"secret\",\n\"tags\":\"administrator\"\n}"
		},
		{
			"id": "6357403e-212a-30ef-ed08-0bb9a314cdd1",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/policies",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307193970,
			"name": "Get all Policies",
			"description": "A list of all policies.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "6636a023-a2bf-9420-a0ea-9ae81ff0a3bd",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/parameters/component/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307142413,
			"name": "List of all parameters/component on vhost",
			"description": "A list of all parameters for a given component and virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "666ad81a-c4f4-02b0-7501-a1fd4c1d57d4",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306855590,
			"name": "Delete vhost by name",
			"description": "Delete an individual virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "66aff78e-40df-8c51-aeab-47b07a770b3f",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/consumers/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301137791,
			"name": "Consumer Info on vhost",
			"description": "A list of all consumers on vhost.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "66ee50c4-1157-739a-c75a-ed474c8cdbd4",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307096152,
			"name": "Get List of all users/permissions",
			"description": "A list of all permissions for all users.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "6ea1650a-27f2-c363-c65a-579a96bdce86",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/channels/channel",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300885223,
			"name": "Channel Info",
			"description": "Details about an individual channel.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "7945ddcb-9096-8a46-bea9-8e3f7bea4a7c",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/connections/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300687484,
			"name": "Get Individual connection",
			"description": "An individual connection.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "7be1b6fc-24c6-3767-5992-17f9c7a70328",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/queues/%2f/queue-name/get",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457308943874,
			"name": "Get message from queue",
			"description": "Get messages from a queue. (This is not an HTTP GET as it will alter the state of the queue.) You should post a body looking like:\n\n<blockquote>\n{<br>\n\"count\":5,<br>\n\"requeue\":true,<br>\n\"encoding\":\"auto\",<br>\n\"truncate\":50000<br>\n}\n</blockquote>\n\n<ul>\n<li>count controls the maximum number of messages to get. You may get fewer messages than this if the queue cannot immediately provide them.</li>\n<li>requeue determines whether the messages will be removed from the queue. If requeue is true they will be requeued - but their redelivered flag will be set.</li>\n<li>encoding must be either \"auto\" (in which case the payload will be returned as a string if it is valid UTF-8, and base64 encoded otherwise), or \"base64\" (in which case the payload will always be base64 encoded).</li>\n<li>If truncate is present it will truncate the message payload if it is larger than the size given (in bytes).</li>\n</ul>\n\ntruncate is optional; all other keys are mandatory.\n\nPlease note that the get path in the HTTP API is intended for diagnostics etc - it does not implement reliable delivery and so should be treated as a sysadmin's tool rather than a general API for messaging.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": " {\n\"count\":5,\n\"requeue\":true,\n\"encoding\":\"auto\",\n\"truncate\":50000\n}"
		},
		{
			"id": "86406311-01d4-cabd-8089-c56e6969f76e",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/parameters/component/vhost/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307148512,
			"name": "Get an individual parameter",
			"description": "Get an individual parameter",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "8790c3b0-daeb-28d0-c263-3e2d9ad0b9b2",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/whoami",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306917365,
			"name": "Logged In User Info",
			"description": "Details of the currently authenticated user.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "8a6279a1-2c09-c354-7b03-9fcfaa0080c5",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts/%2f/connections",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300614597,
			"name": "Open vhost connections",
			"description": "A list of all open connections in a specific vhost.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "8d686177-406d-3add-3c4b-da6bf8957e18",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300868821,
			"name": "List All Open Channels",
			"description": "A list of all open channels.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "94421399-701e-724d-0f85-1fca237af4c6",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/connections/name/channels",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300712528,
			"name": "List Channels on Connection",
			"description": "List of all channels for a given connection.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "9a613d98-a364-f853-69cf-1543bab4d731",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317083184,
			"name": "Get individual exchange/exchange binding Advance",
			"description": "Get individual binding between an exchange and a queue. \n\nThe props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "9f9c72bf-70c4-02fb-2349-7a997f0e7f5a",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/parameters/component",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307137135,
			"name": "List of all parameter/component",
			"description": "A list of all parameters for a given component.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "a58a3319-3511-162f-9999-1641a8fd3cda",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457303368697,
			"name": "Get Individual Queue",
			"description": "An individual queue.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "aa4b1b38-3f4e-009c-16db-11e5864b558f",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/extensions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299906806,
			"name": "Get Management Plugin Extensions",
			"description": "A list of extensions to the management plugin.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "b58ba47b-d267-6850-890b-1bd69c714636",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/connections/name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300681554,
			"name": "Close Individual connection",
			"description": "Close the connection. Optionally set the \"X-Reason\" header when DELETEing to provide a reason.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "b9120d6e-e029-88f0-7ff9-070e2270b6de",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/cluster-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299573808,
			"name": "Set Cluster Name",
			"description": "Set the name identifying this RabbitMQ cluster.\n\nLook at the JSON payload in the request body.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"rabbit@localhost\"\n}"
		},
		{
			"id": "b94e7df0-c74d-4aee-d114-f199bf43f73d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/permissions/%2f/broker",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457318004533,
			"name": "Get permission for user/vhost",
			"description": "An individual permission of a user and virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "baffa18b-cd90-691f-7aa8-c4527a96ac0d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/nodes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299623459,
			"name": "Get All Nodes",
			"description": "A list of nodes in the RabbitMQ cluster.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "bdd7dffc-fa82-3312-4507-18415c1d5df4",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/definitions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300541472,
			"name": "Get Server Definitions",
			"description": "The server definitions - exchanges, queues, bindings, users, virtual hosts, permissions and parameters. Everything apart from messages. POST to upload an existing set of definitions.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "c07bfe0d-cc8a-41f9-3011-d110e219dbd9",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/policies/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307199676,
			"name": "Get all policies",
			"description": "A list of all policies in a given virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "c0e51bda-b3eb-f8a3-70bb-adf3a9d70838",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301759378,
			"name": "Get Exchange on vhost",
			"description": "Get individual exchange on vhost by name",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "c97a970c-7dc8-b3e2-b420-8b384ad0a2df",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/exchange/q/queue/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306761408,
			"name": "Delete individual exchange/queue binding",
			"description": "An individual binding between an exchange and a queue. The props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "c9ff43e6-9394-1446-ff76-2be89658cd16",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/users",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306867630,
			"name": "Get list of all users",
			"description": "Get list of all users",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "cb2a7558-8219-dd06-692c-241b39bb7d7f",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/users/name/permissions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317813489,
			"name": "Get user permission",
			"description": "Get user permission",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "cbfc36b2-bbcc-1d86-b00c-6fb016dc53ab",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/overview",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457299921534,
			"name": "Get Overview",
			"description": "Various random bits of information that describe the whole system.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "d56ea2f4-0b8b-0a25-a04a-5e96748d8b00",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301157444,
			"name": "List Exchanges",
			"description": "A list of all exchanges.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "d6c4bc6f-c0c3-bf38-e313-a72a90e4e7f5",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/connections",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300529771,
			"name": "Open Connections",
			"description": "A list of all open connections.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "d6f249b5-edb6-c549-47f1-74397a485e20",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317013029,
			"name": "/api/bindings/vhost/e/source/e/destination",
			"description": "Post individual binding between an exchange and a queue. \n\nThe props part of the URI is a \"name\" for the binding composed of its routing key and a hash of its arguments.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "d90eb8d8-1887-9ad7-b6c1-e0557a64e0aa",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/exchanges/%2f/some.name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301825412,
			"name": "Create Exchange on vhost",
			"description": "Create exchange on vhost",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n    \"type\":\"direct\",\n    \"auto_delete\":false,\n    \"durable\":true,\n    \"internal\":false,\n    \"arguments\":{}\n}"
		},
		{
			"id": "ddd0df84-e554-8864-f46f-673766e19fe1",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues/%2f/queue-name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457304037217,
			"name": "Delete a Queue",
			"description": "When deleteing a queue you can add the query string parameters \n\nQuery Parameters<br>\n<strong>if-empty=true</strong><br> \n<strong>if-unused=true</strong>\n\nThese prevent the delete from succeeding if the queue contains messages, or has consumers, respectively.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "e2e1f3f2-01fd-4bd3-d004-1cf89bca6f2d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/aliveness-test/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457318652577,
			"name": "Declare test queue",
			"description": "Declares a test queue, then publishes and consumes a message. Intended for use by monitoring tools. If everything is working correctly, will return HTTP status 200 with body:\n\n<blockquote>\n{\"status\":\"ok\"}\n</blockquote>\nNote: the test queue will not be deleted (to to prevent queue churn if this is repeatedly pinged).",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "e43abf77-4ab4-17a0-241b-3db5861ee5de",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/queues/%2f/queue-name/contents",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307867596,
			"name": "Delete queue contents",
			"description": "Delete queue contents ",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "e6c79191-5cf9-bf6e-e941-da2f4e59990d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/queues/%2f/queue-name/actions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457308824669,
			"name": "Perform action on queue",
			"description": "Actions that can be taken on a queue. POST a body like:\n\n<blockquote>\n{\"action\":\"sync\"}\n</blockquote>\n\nCurrently the actions which are supported are <strong>sync</strong> and <strong>cancel_sync</strong>.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n\"action\": \"sync\"\n}"
		},
		{
			"id": "e9923fcc-aeb3-6612-c099-570ac2766aa6",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/vhosts/blah",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317365173,
			"name": "Create vhost",
			"description": "Create an individual virtual host. As a virtual host usually only has a name, you do not need an HTTP body. To enable / disable tracing, provide a body looking like:\n\n<blockquote>\n{\"tracing\":true}\n</blockquote>",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\"tracing\":true}"
		},
		{
			"id": "ec996fa5-0662-9737-5a36-2d9730e538f5",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\nContent-Type: application/json\n",
			"url": "{{host}}/api/permissions/vhost/user",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457318149127,
			"name": "Create user permission/vhost",
			"description": "Create a permission, you will need a body looking something like this:\n\n<blockquote>\n{<br>\n\"configure\":\".*\",<br>\n\"write\":\".*\",<br>\n\"read\":\".*\"<br>\n}\n</blockquote>\n\nAll keys are mandatory.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": [],
			"rawModeData": "{\n\"configure\":\".\",\n\"write\":\".\",\n\"read\":\".*\"\n}"
		},
		{
			"id": "ed340fa3-827e-ada8-f216-193a03eadd81",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/vhosts/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457317313000,
			"name": "Get vhost by Name",
			"description": "Get an individual virtual host.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "ed7cd859-2d94-544b-5df6-5ae43a3a85f2",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/bindings/vhost/e/source/e/destination/props",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457306793746,
			"name": "/api/bindings/vhost/e/source/e/destination/props",
			"description": "A list of all bindings between two exchanges. Similar to the list of all bindings between an exchange and a queue, above.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "f3a2ff0e-8f0b-8145-8832-66a8ce7136cc",
			"headers": "",
			"url": "{{host}}/api/definitions/vhost",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457302294020,
			"name": "Set vhost Definition",
			"description": "Set the server definitions for a given virtual host - exchanges, queues, bindings and policies. Note that:\n\n<ul>\n<li>The definitions are merged. Anything already existing on the server but not in the uploaded definitions is untouched.</li>\n<li>Conflicting definitions on immutable objects (exchanges, queues and bindings) will cause an error.</li>\n<li>Conflicting definitions on mutable objects will cause the object in the server to be overwritten with the object from the definitions.</li>\n<li>In the event of an error you will be left with a part-applied set of definitions.</li>\n</ul>\n\nFor convenience you may upload a file from a browser to this URI (i.e. you can use multipart/form-data as well as application/json) in which case the definitions should be uploaded as a form field named \"file\".",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "f4aeb20d-7e14-9b2a-8524-5291edbd9a51",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/definitions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457300209160,
			"name": "Set Server Definitions",
			"description": "Set the server definitions - exchanges, queues, bindings, users, virtual hosts, permissions and parameters. Everything apart from messages. Upload an existing set of definitions. Note that:\n\n<ul>\n<li>The definitions are merged. Anything already existing on the server but not in the uploaded definitions is untouched.</li>\n<li>Conflicting definitions on immutable objects (exchanges, queues and bindings) will cause an error.</li>\n<li>Conflicting definitions on mutable objects will cause the object in the server to be overwritten with the object from the definitions.</li>\n<li>In the event of an error you will be left with a part-applied set of definitions.</li>\n</ul>\n\nFor convenience you may upload a file from a browser to this URI (i.e. you can use multipart/form-data as well as application/json) in which case the definitions should be uploaded as a form field named \"file\".",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "f64b78ec-638a-59c2-7327-40aaff233f3d",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f/amq.direct/bindings/source",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301990887,
			"name": "List All Bindings in exchange is source",
			"description": "A list of all bindings in which a given exchange is the source.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "f837b335-e56f-d831-215f-a915c89dcffa",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301201497,
			"name": "List Exchanges on vhost",
			"description": "A list of all exchanges on vhost.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "f8acf8c4-7d6b-0cca-d47f-c680d0a305d8",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/parameters",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457307129431,
			"name": "A list of all parameters",
			"description": "A list of all parameters.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		},
		{
			"id": "fd2d0177-5f2d-ffc2-d9ef-dc4119de1393",
			"headers": "Authorization: Basic YnJva2VyOkNrWTI2a1R1QXlaVDhyMg==\n",
			"url": "{{host}}/api/exchanges/%2f/some.name",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1457301864931,
			"name": "Delete Exchange on vhost",
			"description": "A list of all exchanges.",
			"collectionId": "637a1895-9aff-af27-71cf-99efe1380937",
			"responses": []
		}
	]
}